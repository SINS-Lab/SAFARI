      SUBROUTINE TSETUP(TEMPER)
C
C COMPUTE STANDARD DEVIATIONS OF ATOMS AT TEMPERATURE TEMP.
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE "params.txt"
      REAL*8 TEMPER
      REAL*8 MASS(NTYPEMAX),MION

      INTEGER TYPEAT(NPARTMAX)
C
      COMMON/MASS/MASS,MION,TYPEAT
      COMMON/TYPES/NTYPES
      COMMON/K/SPRING(NTYPEMAX,3)
      COMMON/THERMO/DEVATM(NTYPEMAX,3),DEVMOM(NTYPEMAX,3)
C
      DATA BOLTZ/8.617D-5/
C
      ENERGY=0.0D0
      IF(TEMPER.GT.0.0D0) THEN
         DO 20 I=1,NTYPES
            DO 20 J=1,3
               ENERGY=BOLTZ*TEMPER
               DEVATM(I,J)=DSQRT(2.0D0*ENERGY/SPRING(I,J))
               DEVMOM(I,J)=DSQRT(2.0D0*MASS(I)*ENERGY)
20       CONTINUE
      ELSE
         DO 10 I=1,NTYPES
            DO 10 J=1,3
               DEVATM(I,J)=0.0D0
               DEVMOM(I,J)=0.0D0
10       CONTINUE
      ENDIF
C
      RETURN
      END
C
C********************************************************
C
      SUBROUTINE  THERM(SEED,XX,XX1,PPP,NTYPE)
C
C THERMALLY TWEAK POSITION OF ATOM NTYPE AT XYZ,
C RETURN NEW POSITION AS X1 Y1 Z1.
C
      IMPLICIT REAL*8(A-H,O-Z)
      INCLUDE "params.txt"
      INTEGER NTYPE
      REAL*8 XX(3),XX1(3),PPP(3)

C      DEVATM(I) IS THE STANDARD DEVIATION IN THE POSITION OF
C      THE ITH ATOM.
      COMMON/THERMO/DEVATM(NTYPEMAX,3),DEVMOM(NTYPEMAX,3)
      COMMON/UTILTY/DZERO, XNULL(4), PI
C
C GENERATE FOUR RANDOM NUMBERS FROM THE EQUILIBRIUM POSITION OF
C THE ATOM AND THE RANDOM NUMBER SEED FOR THE SURFACE.
      RSEED=XX(1)*PI
      RX=RANDSF(RSEED)
      RSEED=XX(2)*PI
      RY=RANDSF(RSEED)
      RSEED=XX(3)*PI
      RZ=RANDSF(RSEED)
      RSEED=SEED
      RS=RANDSF(RSEED)
C
C ADD THE NUMBERS TO GET A NEW SEED AND INITIALIZE THE GENERATOR.
      RSEED=RX+RY+RZ+RS
      RJUNK=RANDSF(RSEED)
C
      DO 10 I=1,3
C        GET A NON-ZERO RANDOM NUMBER.
9        CONTINUE
         R1=RANDSF(RSEED)
         IF(R1.EQ.0.0D0) GO TO 9
C        GET ANOTHER RANDOM NUMBER.
         R2=RANDSF(RSEED)
C        COMBINE THE TWO TO GET A GAUSSIANLY DISTRUBUTED NUMBER.
         R3=DSQRT(-DLOG(R1))
C        TWEAK THE POSITION.
         XX1(I)=XX(I)+DEVATM(NTYPE,I)*R3*DCOS(2.0D0*PI*R2)
         PPP(I)=PPP(I)+DEVMOM(NTYPE,I)*R3*DSIN(2.0D0*PI*R2)
10    CONTINUE
C
      RETURN
      END
C
C
C
      DOUBLE PRECISION FUNCTION RANDSF(SEED)
C
C GENERATE RANDOM NUMBERS IN A UNIFORM DISTRIBUTION
C BETWEEN 0 AND 1.
C
      IMPLICIT REAL*8 (A-H,O-Z)
      SEED=FRACT(SEED)
      SEED=FRACT(9821.0D0*SEED+.211327D0)
      RANDSF=SEED
      RETURN
      END
C
C
      DOUBLE PRECISION FUNCTION FRACT(X)
C GET FRACTIONAL PART OF X.
      REAL*8 X
      INTEGER IX
      IX=IDINT(X)
      FRACT=X-IX
      IF(FRACT.LT.0.0D0) FRACT=-FRACT
      RETURN
      END
